services:
  life-manager-postgres:
    image: postgres:17
    container_name: life-manager-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: life_manager
    volumes:
      - ./backend/life-manager/infrastructure/databases/lifemanager:/docker-entrypoint-initdb.d:ro
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5432" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - life-manager-network

  life-manager-minio:
    image: minio/minio:latest
    container_name: life-manager-minio
    environment:
      MINIO_ROOT_USER: minio_admin
      MINIO_ROOT_PASSWORD: minio_admin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - life-manager-network

#  life-manager-app:
#    build:
#      context: ./backend/life-manager
#      dockerfile: Dockerfile
#    container_name: life-manager-app
#    environment:
#      POSTGRES_HOST: life-manager-postgres
#      POSTGRES_PORT: 5432
#      MINIO_ENDPOINT: http://life-manager-minio:9000
#      MINIO_ACCESS_KEY: minio_admin
#      MINIO_SECRET_KEY: minio_admin
#      MINIO_BUCKET_NAME: life-manager
#      MINIO_AUTO_CREATE_BUCKET: "true"
#      SHOW_SQL: "false"
#      FORMAT_SQL: "false"
#      HIGHLIGHT_SQL: "false"
#    ports:
#      - "8090:8090"
#    depends_on:
#      life-manager-postgres:
#        condition: service_healthy
#      life-manager-minio:
#        condition: service_healthy
#    networks:
#      - life-manager-network

volumes:
  postgres-data:
  minio-data:

networks:
  life-manager-network:
    driver: bridge